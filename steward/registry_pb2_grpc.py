# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from steward import maintenance_pb2 as steward_dot_maintenance__pb2
from steward import user_pb2 as steward_dot_user__pb2


class UserServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetUser = channel.unary_unary(
                '/steward.UserService/GetUser',
                request_serializer=steward_dot_user__pb2.GetUserRequest.SerializeToString,
                response_deserializer=steward_dot_user__pb2.User.FromString,
                )
        self.CreateUser = channel.unary_unary(
                '/steward.UserService/CreateUser',
                request_serializer=steward_dot_user__pb2.CreateUserRequest.SerializeToString,
                response_deserializer=steward_dot_user__pb2.User.FromString,
                )
        self.DeleteUser = channel.unary_unary(
                '/steward.UserService/DeleteUser',
                request_serializer=steward_dot_user__pb2.DeleteUserRequest.SerializeToString,
                response_deserializer=steward_dot_user__pb2.User.FromString,
                )
        self.UpdateUser = channel.unary_unary(
                '/steward.UserService/UpdateUser',
                request_serializer=steward_dot_user__pb2.UpdateUserRequest.SerializeToString,
                response_deserializer=steward_dot_user__pb2.User.FromString,
                )
        self.ListUsers = channel.unary_stream(
                '/steward.UserService/ListUsers',
                request_serializer=steward_dot_user__pb2.ListUsersRequest.SerializeToString,
                response_deserializer=steward_dot_user__pb2.User.FromString,
                )


class UserServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUser,
                    request_deserializer=steward_dot_user__pb2.GetUserRequest.FromString,
                    response_serializer=steward_dot_user__pb2.User.SerializeToString,
            ),
            'CreateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUser,
                    request_deserializer=steward_dot_user__pb2.CreateUserRequest.FromString,
                    response_serializer=steward_dot_user__pb2.User.SerializeToString,
            ),
            'DeleteUser': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUser,
                    request_deserializer=steward_dot_user__pb2.DeleteUserRequest.FromString,
                    response_serializer=steward_dot_user__pb2.User.SerializeToString,
            ),
            'UpdateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateUser,
                    request_deserializer=steward_dot_user__pb2.UpdateUserRequest.FromString,
                    response_serializer=steward_dot_user__pb2.User.SerializeToString,
            ),
            'ListUsers': grpc.unary_stream_rpc_method_handler(
                    servicer.ListUsers,
                    request_deserializer=steward_dot_user__pb2.ListUsersRequest.FromString,
                    response_serializer=steward_dot_user__pb2.User.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'steward.UserService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/steward.UserService/GetUser',
            steward_dot_user__pb2.GetUserRequest.SerializeToString,
            steward_dot_user__pb2.User.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/steward.UserService/CreateUser',
            steward_dot_user__pb2.CreateUserRequest.SerializeToString,
            steward_dot_user__pb2.User.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/steward.UserService/DeleteUser',
            steward_dot_user__pb2.DeleteUserRequest.SerializeToString,
            steward_dot_user__pb2.User.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/steward.UserService/UpdateUser',
            steward_dot_user__pb2.UpdateUserRequest.SerializeToString,
            steward_dot_user__pb2.User.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/steward.UserService/ListUsers',
            steward_dot_user__pb2.ListUsersRequest.SerializeToString,
            steward_dot_user__pb2.User.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)


class MaintenanceServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetMaintenance = channel.unary_unary(
                '/steward.MaintenanceService/GetMaintenance',
                request_serializer=steward_dot_maintenance__pb2.GetMaintenanceRequest.SerializeToString,
                response_deserializer=steward_dot_maintenance__pb2.Maintenance.FromString,
                )
        self.CreateMaintenance = channel.unary_unary(
                '/steward.MaintenanceService/CreateMaintenance',
                request_serializer=steward_dot_maintenance__pb2.CreateMaintenanceRequest.SerializeToString,
                response_deserializer=steward_dot_maintenance__pb2.Maintenance.FromString,
                )
        self.DeleteMaintenance = channel.unary_unary(
                '/steward.MaintenanceService/DeleteMaintenance',
                request_serializer=steward_dot_maintenance__pb2.DeleteMaintenanceRequest.SerializeToString,
                response_deserializer=steward_dot_maintenance__pb2.Maintenance.FromString,
                )
        self.UpdateMaintenance = channel.unary_unary(
                '/steward.MaintenanceService/UpdateMaintenance',
                request_serializer=steward_dot_maintenance__pb2.UpdateMaintenanceRequest.SerializeToString,
                response_deserializer=steward_dot_maintenance__pb2.Maintenance.FromString,
                )
        self.ListMaintenances = channel.unary_stream(
                '/steward.MaintenanceService/ListMaintenances',
                request_serializer=steward_dot_maintenance__pb2.ListMaintenancesRequest.SerializeToString,
                response_deserializer=steward_dot_maintenance__pb2.Maintenance.FromString,
                )


class MaintenanceServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetMaintenance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateMaintenance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteMaintenance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateMaintenance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListMaintenances(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MaintenanceServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetMaintenance': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMaintenance,
                    request_deserializer=steward_dot_maintenance__pb2.GetMaintenanceRequest.FromString,
                    response_serializer=steward_dot_maintenance__pb2.Maintenance.SerializeToString,
            ),
            'CreateMaintenance': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateMaintenance,
                    request_deserializer=steward_dot_maintenance__pb2.CreateMaintenanceRequest.FromString,
                    response_serializer=steward_dot_maintenance__pb2.Maintenance.SerializeToString,
            ),
            'DeleteMaintenance': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteMaintenance,
                    request_deserializer=steward_dot_maintenance__pb2.DeleteMaintenanceRequest.FromString,
                    response_serializer=steward_dot_maintenance__pb2.Maintenance.SerializeToString,
            ),
            'UpdateMaintenance': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateMaintenance,
                    request_deserializer=steward_dot_maintenance__pb2.UpdateMaintenanceRequest.FromString,
                    response_serializer=steward_dot_maintenance__pb2.Maintenance.SerializeToString,
            ),
            'ListMaintenances': grpc.unary_stream_rpc_method_handler(
                    servicer.ListMaintenances,
                    request_deserializer=steward_dot_maintenance__pb2.ListMaintenancesRequest.FromString,
                    response_serializer=steward_dot_maintenance__pb2.Maintenance.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'steward.MaintenanceService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MaintenanceService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetMaintenance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/steward.MaintenanceService/GetMaintenance',
            steward_dot_maintenance__pb2.GetMaintenanceRequest.SerializeToString,
            steward_dot_maintenance__pb2.Maintenance.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateMaintenance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/steward.MaintenanceService/CreateMaintenance',
            steward_dot_maintenance__pb2.CreateMaintenanceRequest.SerializeToString,
            steward_dot_maintenance__pb2.Maintenance.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteMaintenance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/steward.MaintenanceService/DeleteMaintenance',
            steward_dot_maintenance__pb2.DeleteMaintenanceRequest.SerializeToString,
            steward_dot_maintenance__pb2.Maintenance.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateMaintenance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/steward.MaintenanceService/UpdateMaintenance',
            steward_dot_maintenance__pb2.UpdateMaintenanceRequest.SerializeToString,
            steward_dot_maintenance__pb2.Maintenance.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListMaintenances(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/steward.MaintenanceService/ListMaintenances',
            steward_dot_maintenance__pb2.ListMaintenancesRequest.SerializeToString,
            steward_dot_maintenance__pb2.Maintenance.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)


class MaintenanceDefaultsServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetMaintenanceDefaults = channel.unary_unary(
                '/steward.MaintenanceDefaultsService/GetMaintenanceDefaults',
                request_serializer=steward_dot_maintenance__pb2.GetMaintenanceDefaultsRequest.SerializeToString,
                response_deserializer=steward_dot_maintenance__pb2.Maintenance.FromString,
                )
        self.CreateMaintenanceDefaults = channel.unary_unary(
                '/steward.MaintenanceDefaultsService/CreateMaintenanceDefaults',
                request_serializer=steward_dot_maintenance__pb2.CreateMaintenanceDefaultsRequest.SerializeToString,
                response_deserializer=steward_dot_maintenance__pb2.Maintenance.FromString,
                )
        self.DeleteMaintenanceDefaults = channel.unary_unary(
                '/steward.MaintenanceDefaultsService/DeleteMaintenanceDefaults',
                request_serializer=steward_dot_maintenance__pb2.DeleteMaintenanceDefaultsRequest.SerializeToString,
                response_deserializer=steward_dot_maintenance__pb2.Maintenance.FromString,
                )
        self.UpdateMaintenanceDefaults = channel.unary_unary(
                '/steward.MaintenanceDefaultsService/UpdateMaintenanceDefaults',
                request_serializer=steward_dot_maintenance__pb2.UpdateMaintenanceDefaultsRequest.SerializeToString,
                response_deserializer=steward_dot_maintenance__pb2.Maintenance.FromString,
                )
        self.ListMaintenanceDefaults = channel.unary_stream(
                '/steward.MaintenanceDefaultsService/ListMaintenanceDefaults',
                request_serializer=steward_dot_maintenance__pb2.ListMaintenanceDefaultsRequest.SerializeToString,
                response_deserializer=steward_dot_maintenance__pb2.Maintenance.FromString,
                )


class MaintenanceDefaultsServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetMaintenanceDefaults(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateMaintenanceDefaults(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteMaintenanceDefaults(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateMaintenanceDefaults(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListMaintenanceDefaults(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MaintenanceDefaultsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetMaintenanceDefaults': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMaintenanceDefaults,
                    request_deserializer=steward_dot_maintenance__pb2.GetMaintenanceDefaultsRequest.FromString,
                    response_serializer=steward_dot_maintenance__pb2.Maintenance.SerializeToString,
            ),
            'CreateMaintenanceDefaults': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateMaintenanceDefaults,
                    request_deserializer=steward_dot_maintenance__pb2.CreateMaintenanceDefaultsRequest.FromString,
                    response_serializer=steward_dot_maintenance__pb2.Maintenance.SerializeToString,
            ),
            'DeleteMaintenanceDefaults': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteMaintenanceDefaults,
                    request_deserializer=steward_dot_maintenance__pb2.DeleteMaintenanceDefaultsRequest.FromString,
                    response_serializer=steward_dot_maintenance__pb2.Maintenance.SerializeToString,
            ),
            'UpdateMaintenanceDefaults': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateMaintenanceDefaults,
                    request_deserializer=steward_dot_maintenance__pb2.UpdateMaintenanceDefaultsRequest.FromString,
                    response_serializer=steward_dot_maintenance__pb2.Maintenance.SerializeToString,
            ),
            'ListMaintenanceDefaults': grpc.unary_stream_rpc_method_handler(
                    servicer.ListMaintenanceDefaults,
                    request_deserializer=steward_dot_maintenance__pb2.ListMaintenanceDefaultsRequest.FromString,
                    response_serializer=steward_dot_maintenance__pb2.Maintenance.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'steward.MaintenanceDefaultsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MaintenanceDefaultsService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetMaintenanceDefaults(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/steward.MaintenanceDefaultsService/GetMaintenanceDefaults',
            steward_dot_maintenance__pb2.GetMaintenanceDefaultsRequest.SerializeToString,
            steward_dot_maintenance__pb2.Maintenance.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateMaintenanceDefaults(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/steward.MaintenanceDefaultsService/CreateMaintenanceDefaults',
            steward_dot_maintenance__pb2.CreateMaintenanceDefaultsRequest.SerializeToString,
            steward_dot_maintenance__pb2.Maintenance.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteMaintenanceDefaults(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/steward.MaintenanceDefaultsService/DeleteMaintenanceDefaults',
            steward_dot_maintenance__pb2.DeleteMaintenanceDefaultsRequest.SerializeToString,
            steward_dot_maintenance__pb2.Maintenance.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateMaintenanceDefaults(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/steward.MaintenanceDefaultsService/UpdateMaintenanceDefaults',
            steward_dot_maintenance__pb2.UpdateMaintenanceDefaultsRequest.SerializeToString,
            steward_dot_maintenance__pb2.Maintenance.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListMaintenanceDefaults(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/steward.MaintenanceDefaultsService/ListMaintenanceDefaults',
            steward_dot_maintenance__pb2.ListMaintenanceDefaultsRequest.SerializeToString,
            steward_dot_maintenance__pb2.Maintenance.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
